/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package controller;

import java.awt.event.KeyEvent;
import java.io.File;
import javax.swing.DefaultListModel;
import javax.swing.JDialog;
import javax.swing.JFileChooser;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.filechooser.FileSystemView;
import javax.swing.tree.DefaultMutableTreeNode;
import javax.swing.tree.DefaultTreeModel;
import javax.swing.tree.TreePath;
import model.CompanyConfig;
import model.CompanyConfigManager;
import org.apache.commons.net.ftp.FTPFile;
import model.FtpFileChooser;

/**
 *
 * @author user
 */
public class FtpFileChooserPage extends javax.swing.JFrame {

    FtpFileChooser ftpFileChooser;

    /**
     * Creates new form FtpFileChooser
     */
    public FtpFileChooserPage() throws Exception {
        try {
            initComponents();
            ftpFileChooser = FtpFileChooser.getInstance();
            try {
                ftpFileChooser.connetFTP();
            } catch (Exception ex) {
                JOptionPane.showMessageDialog(new JFrame(), ex.getMessage(), "錯誤", JOptionPane.ERROR_MESSAGE);
            }
            try {
                ftpFileChooser.loginFTP();
                ftpFileChooser.initInstance();
                initDefaultPath();
                initFileTree();
                this.setVisible(true);
            } catch (Exception ex) {
                JOptionPane.showMessageDialog(new JFrame(), ex.getMessage(), "錯誤", JOptionPane.ERROR_MESSAGE);
                loginDialog.setVisible(true);
            }
        } catch (Exception ex) {
            ex.printStackTrace();
            throw ex;
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        downloadDialog = new javax.swing.JDialog();
        jPanel2 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        loginDialog = new javax.swing.JDialog();
        jPanel3 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        passwordField = new javax.swing.JPasswordField();
        accountField = new javax.swing.JTextField();
        loginBtn = new javax.swing.JButton();
        ftpPath = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        cancelBtn = new javax.swing.JButton();
        comfirmBtn = new javax.swing.JButton();
        jSplitPane2 = new javax.swing.JSplitPane();
        jTabbedPane2 = new javax.swing.JTabbedPane();
        jScrollPane3 = new javax.swing.JScrollPane();
        outputTextArea = new javax.swing.JTextArea();
        jSplitPane1 = new javax.swing.JSplitPane();
        jScrollPane1 = new javax.swing.JScrollPane();
        directoryTree = new javax.swing.JTree();
        jScrollPane2 = new javax.swing.JScrollPane();
        fileList = new javax.swing.JList();

        downloadDialog.setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        downloadDialog.setTitle("下載中....");
        downloadDialog.setAlwaysOnTop(true);
        downloadDialog.setBounds(new java.awt.Rectangle(0, 0, 0, 0));
        downloadDialog.setIconImages(null);
        downloadDialog.setLocation(new java.awt.Point(900, 500));

        jLabel2.setFont(new java.awt.Font("微軟正黑體", 0, 18)); // NOI18N
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setToolTipText("");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, 393, Short.MAX_VALUE)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, 133, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout downloadDialogLayout = new javax.swing.GroupLayout(downloadDialog.getContentPane());
        downloadDialog.getContentPane().setLayout(downloadDialogLayout);
        downloadDialogLayout.setHorizontalGroup(
            downloadDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
            .addGroup(downloadDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(downloadDialogLayout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );
        downloadDialogLayout.setVerticalGroup(
            downloadDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
            .addGroup(downloadDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(downloadDialogLayout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );

        loginDialog.setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        loginDialog.setTitle("請輸入帳號密碼");
        loginDialog.setBounds(new java.awt.Rectangle(500, 300, 550, 250));
        loginDialog.setLocation(new java.awt.Point(500, 300));

        jLabel3.setFont(new java.awt.Font("微軟正黑體", 0, 18)); // NOI18N
        jLabel3.setText("帳號：");

        jLabel4.setFont(new java.awt.Font("微軟正黑體", 0, 18)); // NOI18N
        jLabel4.setText("密碼：");

        passwordField.setFont(new java.awt.Font("微軟正黑體", 0, 18)); // NOI18N
        passwordField.setNextFocusableComponent(loginBtn);
        passwordField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                passwordFieldKeyPressed(evt);
            }
        });

        accountField.setFont(new java.awt.Font("微軟正黑體", 0, 18)); // NOI18N
        accountField.setFocusCycleRoot(true);
        accountField.setNextFocusableComponent(passwordField);

        loginBtn.setFont(new java.awt.Font("微軟正黑體", 0, 18)); // NOI18N
        loginBtn.setText("登入");
        loginBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                loginBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(29, 29, 29)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jLabel4)
                        .addGap(18, 18, 18)
                        .addComponent(passwordField))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addGap(18, 18, 18)
                        .addComponent(accountField, javax.swing.GroupLayout.PREFERRED_SIZE, 361, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(0, 66, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(loginBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(49, 49, 49)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(accountField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(passwordField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4))
                .addGap(18, 18, 18)
                .addComponent(loginBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout loginDialogLayout = new javax.swing.GroupLayout(loginDialog.getContentPane());
        loginDialog.getContentPane().setLayout(loginDialogLayout);
        loginDialogLayout.setHorizontalGroup(
            loginDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(loginDialogLayout.createSequentialGroup()
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        loginDialogLayout.setVerticalGroup(
            loginDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        setTitle("請選擇Patch");
        setLocation(new java.awt.Point(500, 300));
        setSize(new java.awt.Dimension(700, 400));

        ftpPath.setFont(new java.awt.Font("微軟正黑體", 0, 14)); // NOI18N
        ftpPath.setToolTipText("");

        jLabel1.setFont(new java.awt.Font("微軟正黑體", 0, 18)); // NOI18N
        jLabel1.setText("路徑：");

        cancelBtn.setFont(new java.awt.Font("微軟正黑體", 0, 18)); // NOI18N
        cancelBtn.setText("取消");
        cancelBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelBtnActionPerformed(evt);
            }
        });

        comfirmBtn.setFont(new java.awt.Font("微軟正黑體", 0, 18)); // NOI18N
        comfirmBtn.setText("確定");
        comfirmBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comfirmBtnActionPerformed(evt);
            }
        });

        jSplitPane2.setDividerLocation(400);
        jSplitPane2.setOrientation(javax.swing.JSplitPane.VERTICAL_SPLIT);

        outputTextArea.setEditable(false);
        outputTextArea.setColumns(20);
        outputTextArea.setFont(new java.awt.Font("Monospaced", 0, 14)); // NOI18N
        outputTextArea.setLineWrap(true);
        outputTextArea.setRows(5);
        jScrollPane3.setViewportView(outputTextArea);

        jTabbedPane2.addTab("輸出結果", jScrollPane3);

        jSplitPane2.setRightComponent(jTabbedPane2);

        jSplitPane1.setDividerLocation(350);

        directoryTree.setFont(new java.awt.Font("微軟正黑體", 0, 18)); // NOI18N
        javax.swing.tree.DefaultMutableTreeNode treeNode1 = new javax.swing.tree.DefaultMutableTreeNode("FTP根目錄");
        directoryTree.setModel(new javax.swing.tree.DefaultTreeModel(treeNode1));
        directoryTree.setAutoscrolls(true);
        directoryTree.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        directoryTree.setLargeModel(true);
        directoryTree.setRowHeight(18);
        directoryTree.addTreeExpansionListener(new javax.swing.event.TreeExpansionListener() {
            public void treeCollapsed(javax.swing.event.TreeExpansionEvent evt) {
            }
            public void treeExpanded(javax.swing.event.TreeExpansionEvent evt) {
                directoryTreeTreeExpanded(evt);
            }
        });
        directoryTree.addTreeWillExpandListener(new javax.swing.event.TreeWillExpandListener() {
            public void treeWillCollapse(javax.swing.event.TreeExpansionEvent evt)throws javax.swing.tree.ExpandVetoException {
            }
            public void treeWillExpand(javax.swing.event.TreeExpansionEvent evt)throws javax.swing.tree.ExpandVetoException {
                directoryTreeTreeWillExpand(evt);
            }
        });
        directoryTree.addTreeSelectionListener(new javax.swing.event.TreeSelectionListener() {
            public void valueChanged(javax.swing.event.TreeSelectionEvent evt) {
                directoryTreeValueChanged(evt);
            }
        });
        jScrollPane1.setViewportView(directoryTree);

        jSplitPane1.setLeftComponent(jScrollPane1);

        fileList.setFont(new java.awt.Font("微軟正黑體", 0, 18)); // NOI18N
        fileList.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        fileList.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                fileListMouseReleased(evt);
            }
        });
        jScrollPane2.setViewportView(fileList);

        jSplitPane1.setRightComponent(jScrollPane2);

        jSplitPane2.setLeftComponent(jSplitPane1);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jSplitPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 880, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(cancelBtn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(comfirmBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(12, 12, 12))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(cancelBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(comfirmBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jSplitPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 581, Short.MAX_VALUE))
                .addGap(12, 12, 12))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(40, 40, 40)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(ftpPath, javax.swing.GroupLayout.PREFERRED_SIZE, 878, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap())
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(36, 36, 36)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(ftpPath, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1))
                .addGap(18, 18, 18)
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void cancelBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelBtnActionPerformed
        try {
            if (ftpFileChooser.isConnected()) {
                ftpFileChooser.logoutFTP();
                ftpFileChooser.disconnectFTP();
            }
            this.dispose();
        } catch (Exception ex) {
            ex.printStackTrace();
            JOptionPane.showMessageDialog(new JFrame(), ex.getMessage());
        }
    }//GEN-LAST:event_cancelBtnActionPerformed

    private void directoryTreeValueChanged(javax.swing.event.TreeSelectionEvent evt) {//GEN-FIRST:event_directoryTreeValueChanged
        if (directoryTree.getSelectionCount() == 1) {
            try {
                TreePath selectedPath = directoryTree.getSelectionPath();
                DefaultMutableTreeNode selectedNode = (DefaultMutableTreeNode) selectedPath.getLastPathComponent();
                ftpFileChooser.buildTreeNode(selectedNode);
                ftpPath.setText(FtpFileChooser.getTreePathString(selectedNode));
                browseFile(selectedNode);
            } catch (Exception ex) {
                ex.printStackTrace();
                JOptionPane.showMessageDialog(new JFrame(), "選擇節點錯誤:" + ex.getMessage());
            }
        }
    }//GEN-LAST:event_directoryTreeValueChanged

    private void directoryTreeTreeWillExpand(javax.swing.event.TreeExpansionEvent evt)throws javax.swing.tree.ExpandVetoException {//GEN-FIRST:event_directoryTreeTreeWillExpand
        directoryTree.setSelectionPath(evt.getPath());
    }//GEN-LAST:event_directoryTreeTreeWillExpand

    private void comfirmBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comfirmBtnActionPerformed
        if (!fileList.isSelectionEmpty()) {
            try {
                File file = null;
                File sourceFile = getPureDirectory(MainPage.patchPath.getText()); //介面路徑
                if (sourceFile == null || !sourceFile.exists()) {
                    sourceFile = getPureDirectory("");  // 使用者預設路徑
                }
                if (sourceFile == null || !sourceFile.exists()) {
                    sourceFile = FileSystemView.getFileSystemView().getHomeDirectory(); // 最後才取桌面路径
                }
                JFileChooser fileChooser = new JFileChooser();
                fileChooser.setDialogTitle("請選擇patch包儲存路徑");
                String dirFolder = (String) ((DefaultMutableTreeNode) directoryTree.getSelectionPath().getLastPathComponent()).getUserObject();
                fileChooser.setSelectedFile(new File(dirFolder + "@" + String.valueOf(fileList.getSelectedValue())));
                fileChooser.setCurrentDirectory(sourceFile);

                if (fileChooser.showSaveDialog(this) == JFileChooser.APPROVE_OPTION) {
                    file = fileChooser.getSelectedFile();
                    downloadFile(ftpPath.getText(), file.getAbsolutePath(), downloadDialog);
                }
            } catch (Exception ex) {
                ex.printStackTrace();
            }
        } else {
            JOptionPane.showMessageDialog(new JFrame(), "請選擇patch包!");
        }
    }//GEN-LAST:event_comfirmBtnActionPerformed

    private void directoryTreeTreeExpanded(javax.swing.event.TreeExpansionEvent evt) {//GEN-FIRST:event_directoryTreeTreeExpanded

    }//GEN-LAST:event_directoryTreeTreeExpanded

    private void fileListMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_fileListMouseReleased
        TreePath selectedPath = directoryTree.getSelectionPath();
        DefaultMutableTreeNode selectedNode = (DefaultMutableTreeNode) selectedPath.getLastPathComponent();
        String folderPath = ftpPath.getText();
        if (!fileList.isSelectionEmpty()) {
            ftpPath.setText(folderPath + fileList.getSelectedValue());
        }
    }//GEN-LAST:event_fileListMouseReleased

    private void loginBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_loginBtnActionPerformed
        login();
    }//GEN-LAST:event_loginBtnActionPerformed

    private void passwordFieldKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_passwordFieldKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            login();
        }
    }//GEN-LAST:event_passwordFieldKeyPressed

    private void login() {
        String account = accountField.getText();
        String password = String.valueOf(passwordField.getPassword());
        try {
            if (ftpFileChooser.isConnected() && ftpFileChooser.isAvailable()) {
                ftpFileChooser.setAcount(account);
                ftpFileChooser.setPassword(password);
                ftpFileChooser.loginFTP();
                ftpFileChooser.initTreeModel();
                loginDialog.dispose();
                initDefaultPath();
                initFileTree();
                this.setVisible(true);
            } else {
                JOptionPane.showMessageDialog(new JFrame(), "連線中斷或無法取得連線", "錯誤", JOptionPane.ERROR_MESSAGE);
            }
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(new JFrame(), ex.getMessage(), "錯誤", JOptionPane.ERROR_MESSAGE);
        }
    }

    private void initDefaultPath() {
        CompanyConfig config = CompanyConfigManager.getCompanyConfig();
        String defaultPath = "/SFT_code/patch/";
        if (!config.getFtpPath().isEmpty()) {
            defaultPath = config.getFtpPath();
        }
        ftpPath.setText(defaultPath);
    }

    private void initFileTree() throws Exception {
        DefaultTreeModel treeModel = ftpFileChooser.getTreeModel();
        if (treeModel != null) {
            directoryTree.setModel(treeModel);
            expandTree(ftpPath.getText());
        }
    }

    private void expandTree(String path) {
        DefaultMutableTreeNode visitNode = (DefaultMutableTreeNode) directoryTree.getModel().getRoot();
        TreePath treePath;
        String[] pathArray = toStringArray(path);
        for (String pathName : pathArray) {
            if (visitNode.getChildCount() > 0) {
                if (!pathName.isEmpty()) {
                    visitNode = getChildNode(visitNode, pathName);
                    treePath = new TreePath(visitNode.getPath());
                    directoryTree.expandPath(treePath);
                    directoryTree.setSelectionPath(treePath);
                    directoryTree.scrollPathToVisible(treePath);
                }
            }
        }
    }

    private DefaultMutableTreeNode getChildNode(DefaultMutableTreeNode parent, String childValue) {
        if (childValue.isEmpty()) {
            return null;
        } else {
            return (DefaultMutableTreeNode) directoryTree.getModel().getChild(parent, queryIndex(parent, childValue));
        }
    }

    private int queryIndex(DefaultMutableTreeNode parent, String target) {
        int index = -1;
        int count = parent.getChildCount();
        for (int i = 0; i < count; i++) {
            DefaultMutableTreeNode child = (DefaultMutableTreeNode) parent.getChildAt(i);
            String displayValue = (String) child.getUserObject();
            if (displayValue.equals(target)) {
                index = i;
                break;
            }
        }
        return index;
    }

    private String[] toStringArray(String path) {
        path = path.replace("/SFT_code/patch/", "");
        String[] nodeNames = path.split("/");
        return nodeNames;
    }

    private void browseFile(DefaultMutableTreeNode remoteDirNode) {
        try {
            fileList.removeAll();
            FTPFile[] files = ftpFileChooser.listFTPFiles(ftpFileChooser.getTreePathString(remoteDirNode));
            DefaultListModel dlm = new DefaultListModel();
            for (FTPFile file : files) {
                if (file.isFile()) {
                    dlm.addElement(file.getName());
                }
            }
            fileList.setModel(dlm);
        } catch (Exception ex) {
            ex.printStackTrace();
            JOptionPane.showMessageDialog(new JFrame(), ex.getMessage());
        }
    }

    private void downloadFile(String ftpPath, String distPath, JDialog waitDialog) throws Exception {
        waitDialog.setVisible(true);
        if (ftpFileChooser.downloadFTPFile(ftpPath, distPath)) {
            waitDialog.dispose();
            JOptionPane.showMessageDialog(new JFrame(), "下載成功");
            File file = new File(distPath);
            if (file.exists()) {
                this.dispose();
                CompanyConfig config = CompanyConfigManager.getCompanyConfig();
                config.setPatchPath(file.getPath());
                config.setFtpPath(ftpPath);
                CompanyConfigManager.getInstance().updateCompanyConfig(config, "add"); //暫存最近選的patch路徑
                MainPage.patchPath.setText(file.getPath());
                if (JOptionPane.showConfirmDialog(new JFrame(), "是否選擇自動切換?") == JOptionPane.OK_OPTION) {
                    MainPage.switchBtn.doClick(1000);
                }
            } else {
                System.out.println("找不到" + file.getAbsolutePath() + "\\" + fileList.getSelectedValue());
            }
        } else {
            waitDialog.dispose();
            JOptionPane.showMessageDialog(new JFrame(), "下載失敗", "錯誤", JOptionPane.ERROR_MESSAGE);
        }
    }

    //解析路徑，不存在則取的空字串
    private File getPureDirectory(String path) {
        File directoryFile = null;
        File file = new File(path);
        if (file.exists()) {
            if (file.isDirectory()) {
                directoryFile = file;
            } else if (file.isFile()) { //如果路徑包含檔名，把檔名拔掉
                directoryFile = new File(path.substring(0, path.lastIndexOf('\\')));
            }
        }
        return directoryFile;
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField accountField;
    private javax.swing.JButton cancelBtn;
    private javax.swing.JButton comfirmBtn;
    public static javax.swing.JTree directoryTree;
    private javax.swing.JDialog downloadDialog;
    public static javax.swing.JList fileList;
    public static javax.swing.JTextField ftpPath;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JSplitPane jSplitPane1;
    private javax.swing.JSplitPane jSplitPane2;
    private javax.swing.JTabbedPane jTabbedPane2;
    private javax.swing.JButton loginBtn;
    private javax.swing.JDialog loginDialog;
    public static javax.swing.JTextArea outputTextArea;
    private javax.swing.JPasswordField passwordField;
    // End of variables declaration//GEN-END:variables
}
